---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import type { Code } from 'astro:components';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();

const to_filter_chars = ["|", "&", "?"]
const headings = post.body
  .split('\n')
  .filter(value => value.startsWith('#'))
  .map((value, index) => {
    const splited = value.split(' ')
    const count = splited[0].length;
    const title = splited.slice(1).join(' ');
    const ref = title
      .replaceAll(' ', '-')
      .split('')
      .filter(value => !to_filter_chars.includes(value))
      .map(value => value.toLowerCase())
      .join('');
    return { index, count, title, ref };
})

const props = {
  post: post.data,
  summary: headings,
}

---

<BlogPost {...props} >
	<Content />
</BlogPost>
