---
import type { CollectionEntry } from 'astro:content';
import BaseHead from "../components/BaseHead.astro";
import Header from '../components/Header.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { ViewTransitions, fade } from 'astro:transitions';

type Props = { post: CollectionEntry<'blog'>['data'], summary: {index: number, count: number, title: string, ref: string }[] };

const { summary, post: { title, description, pubDate, updatedDate} } = Astro.props;
---

<html lang="pt-br">
	<head>
		<BaseHead title={title} description={description} />
		<style>
      html {
        scroll-behavior: smooth;
      }
      body::-webkit-scrollbar {
        display: none;
      }
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}

			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
	      color: var(--secondary);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
      .summary {
        position: fixed;
        width: calc((100vw - 880px) / 2);
        max-width: 360px;
        left: 3em;
        top: 186px;
      }

      .summary ul {
        margin-block: 0px;
        margin-inline: 0px;
        padding-inline: 0px;
        list-style-type: none;
        line-height: 1.6;
        font-size: 19px;
      }

      .summary ul li a {
        color: rgb(var(--gray));
        text-decoration: none;
        text-wrap: wrap;
      }

      .summary ul li a:hover {
        color: var(--accent);
      }

      @media (max-width: 1299px) {
        .summary {
          display: none;
        }
      }
		</style>
    <ViewTransitions />
	</head>

	<body>
		<Header />
		<main
      transition:animate={fade({duration: "0.42s"})}
    >
      <section class="summary">
        <ul>
        {
          summary.map((heading) => {
            return (
              <li style={`margin-left: ${Math.max((heading.count - 2), 0) * 16}px`}>
                <a href={`#${heading.ref}`}>
                {heading.title}
                </a>
              </li>
            )
          })
        }
        </ul>
      </section>
			<article>
				<div class="prose">
					<div class="title"
            transition:name={title}
          >
						<h1>{title}</h1>
            <div class="date">
							<FormattedDate date={pubDate} />
              { updatedDate
                ? <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                : <></>
              }
						</div>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
	</body>
</html>
